---

# Creates docker container and loads their backups.
# NOTE: requires root for LXC options needed for docker

# Primarily uses docker_container role
# Has separate role for some containers that use Docker-compose

- name: Create LXC for docker
  hosts: proxmox
  vars:
    hostname: dockerAnsible
    vmid: 550
    ip: '192.168.65.50/24'
    gw: '192.168.65.1'
    vlan: '65'
    ostemplate: "local:vztmpl/debian-12-standard_12.2-1_amd64.tar.zst"
    storage: nvme
    disk: 'nvme:32'
    cpus: 1
    cores: 2
    memory: 6144
    boot: true
    description: 'Docker host made by ansible'
    unprivileged: true
    features:
      - nesting=1
      - keyctl=1
  roles:
    - proxmox
  tags: base

- name: Install ansible user
  hosts: docker
  remote_user: root
  gather_facts: false
  roles:
    - bootstrap
  tags: base

- name: Install unzip
  hosts: docker
  remote_user: ansible
  gather_facts: false
  become: true
  vars:
    package_name: unzip
    package_state: present
  roles:
    - install
  tags: base

- name: Install docker
  hosts: docker
  remote_user: ansible
  gather_facts: false
  become: true
  roles:
    - docker_host
  tags: base


- name: Install uptime-kuma container
  hosts: docker
  remote_user: ansible
  gather_facts: false
  become: true
  vars:
    image: louislam/uptime-kuma
    image_tag: 1
    container_name: uptime-kuma
    container_ports: 3001:3001
    container_host_group:
    network_name: bridge
    container_command: null
    volumes:
      uptime-kuma: "/app/data"
      "/var/run/docker.sock": "/var/run/docker.sock"
    container_env: {}
    container_workdir:
    archive_name: 'utk.tar'
  roles:
    - docker_container
  tags: utk

- name: Install Nginx proxy manager using docker compose
  hosts: docker
  remote_user: ansible
  gather_facts: false
  become: true
  roles:
    - nginx
  tags: nginx

- name: Install graylog using docker compose
  hosts: docker
  remote_user: ansible
  gather_facts: false
  become: true
  vars:
    restore: true
  roles:
    - graylog
  tags: graylog

- name: Copy prometheus.yml file
  hosts: docker
  remote_user: ansible
  gather_facts: false
  become: true
  vars:
    source: ~/projects/ansible_proxmox/roles/docker_container/files/prometheus.yml
    destination: "/opt/prometheus.yml"
    owner: ansible
    group: ansible
    mode: '0644'
    remote: false
  roles:
    - copy
  tags: prometheus,grafana

- name: Install prometheus container with prometheus.yml file
  hosts: docker
  remote_user: ansible
  gather_facts: false
  become: true
  vars:
    image: prom/prometheus
    image_tag: latest
    container_name: prometheus
    container_ports: 9090:9090
    container_host_group:
    network_name: bridge
    container_command: null
    volumes:
      /opt/prometheus.yml: "/etc/prometheus/prometheus.yml"
    container_env: {}
    container_workdir:
  roles:
    - docker_container
  tags: prometheus,grafana

- name: Install grafana
  hosts: docker
  remote_user: ansible
  gather_facts: false
  become: true
  vars:
    # image: grafana/grafana-enterprise
    image: grafana/grafana
    image_tag: latest
    container_name: grafana
    container_ports: 3000:3000
    container_host_group:
    network_name: bridge
    container_command: null
    volumes: {}
    container_env: {}
    container_workdir:
  roles:
    - docker_container
  tags: grafana

- name: Copy grafana.ini file
  hosts: docker
  remote_user: ansible
  gather_facts: false
  become: true
  vars:
    container: 'grafana'
    source: /home/greg/projects/ansible_proxmox/roles/docker_container/files/grafana.ini
    destination: "/etc/grafana/grafana.ini"
    owner: ansible
    group: ansible
    mode: '0644'
  roles:
    - docker_copy
  tags: grafana

- name: Copy grafana.db file
  hosts: docker
  remote_user: ansible
  gather_facts: false
  become: true
  vars:
    container: 'grafana'
    source: /home/greg/projects/ansible_proxmox/roles/docker_container/files/grafana.db
    destination: "/var/lib/grafana/grafana.db"
    owner: ansible
    group: ansible
    mode: '0644'
  roles:
    - docker_copy
  tags: grafana

- name: Install grafana plugins
  hosts: docker
  remote_user: ansible
  gather_facts: false
  become: true
  vars:
    container_name: grafana
    cmd: 'grafana cli plugins install grafana-github-datasource'
  roles:
    - docker_run
  tags: grafana


- name: Install watchtower
  hosts: docker
  remote_user: ansible
  gather_facts: false
  become: true
  pre_tasks:
    - name: Include vault variables
      ansible.builtin.include_vars:
        file: group_vars/watchtower.yml
      no_log: true
  vars:
    image: containrrr/watchtower
    image_tag:
    container_name: watchtower
    container_ports: 8080:8080
    container_host_group:
    network_name: bridge
    container_command:
    volumes:
      /var/run/docker.sock: "/var/run/docker.sock"
    container_env:
      WATCHTOWER_HTTP_API_METRICS: "true"
      WATCHTOWER_HTTP_API_TOKEN: "{{ api }}"
    container_workdir:
  roles:
    - docker_container
  tags: watchtower

- name: Install overseerr
  hosts: docker
  remote_user: ansible
  gather_facts: false
  become: true
  vars:
    image: sctx/overseerr
    image_tag:
    container_name: overseerr
    container_ports: 5055:5055
    container_host_group:
    network_name: bridge
    container_command:
    volumes:
      overseerr: "/app/config"
    container_env:
      Log_Level: "debug"
      TZ: "UTC"
      PORT: "5055"
    container_workdir:
  roles:
    - docker_container
  tags: overseerr

- name: Install homepage using docker compose
  hosts: docker
  remote_user: ansible
  gather_facts: false
  become: true
  vars:
    restore: true
  roles:
    - homepage
  tags: homepage

# - name: Install authentik using docker compose
#   hosts: docker
#   remote_user: ansible
#   gather_facts: false
#   become: true
#   vars:
#     restore: true
#   roles:
#     - authentik
#   tags: authentik

- name: Add syslog config
  hosts: docker
  remote_user: ansible
  gather_facts: false
  become: true
  vars:
    syslog_server_ip: 127.0.0.1
  roles:
    - syslog_client
  tags: syslog

# - name: Install node exporter
#   hosts: docker
#   remote_user: ansible
#   gather_facts: true
#   become: true
#   roles:
#     - prometheus.prometheus.node_exporter
#   tags: prometheus, grafana

# - name: Install changedetection
#   hosts: docker
#   remote_user: ansible
#   gather_facts: false
#   become: true
#   vars:
#     image: dgtlmoon/changedetection.io
#     image_tag:
#     container_name: changedetection.io
#     container_ports: 5000:5000
#     container_host_group:
#     network_name: bridge
#     container_command: null
#     volumes:
#       datastore-volume: "/datastore"
#     container_env: {}
#     container_workdir:
#     archive_name: 'changedetection.tar'
#   roles:
#     - docker_container
#   tags: changedetection
